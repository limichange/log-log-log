(window.webpackJsonp=window.webpackJsonp||[]).push([[271],{615:function(e,s,t){"use strict";t.r(s);var a=t(43),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"rxjs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rxjs"}},[e._v("#")]),e._v(" Rxjs")]),e._v(" "),t("h2",{attrs:{id:"observables"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#observables"}},[e._v("#")]),e._v(" Observables")]),e._v(" "),t("p",[e._v("Observables are lazy Push collections of multiple values.")]),e._v(" "),t("h2",{attrs:{id:"operators"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#operators"}},[e._v("#")]),e._v(" Operators")]),e._v(" "),t("p",[e._v("Operators are "),t("code",[e._v("functions")]),e._v(". There are two kinds of operators:")]),e._v(" "),t("p",[t("code",[e._v("Pipeable Operators")]),e._v(" are the kind that can be piped to Observables using the syntax "),t("code",[e._v("observableInstance.pipe(operator())")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"subscription"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#subscription"}},[e._v("#")]),e._v(" Subscription")]),e._v(" "),t("p",[e._v("A Subscription is an object that represents a disposable resource, usually the execution of an Observable.\nA Subscription has one important method, "),t("code",[e._v("unsubscribe")]),e._v(", that takes no argument and just disposes the resource held by the subscription.")]),e._v(" "),t("h2",{attrs:{id:"subjects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#subjects"}},[e._v("#")]),e._v(" Subjects")]),e._v(" "),t("p",[e._v("An RxJS Subject is a special type of Observable that allows values to be multicasted to many Observers.\nWhile plain Observables are unicast(each subscribed Observer owns an independent execution of the Observable), Subjects are multicasted.")]),e._v(" "),t("h2",{attrs:{id:"scheduler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scheduler"}},[e._v("#")]),e._v(" Scheduler")]),e._v(" "),t("p",[e._v("A scheduler controls when a subscription starts and when notifications are delivered.\nIt consists of three components.")]),e._v(" "),t("h2",{attrs:{id:"links"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[e._v("#")]),e._v(" links")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://rxjs-dev.firebaseapp.com/guide/observable",target:"_blank",rel:"noopener noreferrer"}},[e._v("rxjs guide"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);