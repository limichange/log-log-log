(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{518:function(o,n,t){"use strict";t.r(n);var a=t(43),e=Object(a.a)({},(function(){var o=this,n=o.$createElement,t=o._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[t("h1",{attrs:{id:"document-ready-和-window-onload"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#document-ready-和-window-onload"}},[o._v("#")]),o._v(" document.ready 和 window.onload")]),o._v(" "),t("p",[o._v("document.ready 和 window.onload 的区别是：上面定义的 document.ready 方法在 DOM 树加载完成后就会执行，而 window.onload 是在页面资源（比如图片和媒体资源，它们的加载速度远慢于 DOM 的加载速度）加载完成之后才执行。也就是说$(document).ready 要比 window.onload 先执行。")]),o._v(" "),t("h2",{attrs:{id:"links"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[o._v("#")]),o._v(" links")]),o._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://baijiahao.baidu.com/s?id=1613225567743061589&wfr=spider&for=pc",target:"_blank",rel:"noopener noreferrer"}},[o._v("原生 JS 实现 document.ready 以及和 window.onload 的先后顺序"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=e.exports}}]);