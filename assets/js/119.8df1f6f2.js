(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{462:function(t,r,a){"use strict";a.r(r);var e=a(43),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"graphql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graphql"}},[t._v("#")]),t._v(" GraphQL")]),t._v(" "),a("h2",{attrs:{id:"graphql-在解决什么问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#graphql-在解决什么问题"}},[t._v("#")]),t._v(" GraphQL 在解决什么问题")]),t._v(" "),a("ul",[a("li",[t._v("接口数量众多维护成本高：接口的数量通常由业务场景的数量决定，为了尽量减少接口数量，服务端工程师通常会对业务做抽象，首先构建粒度较小的数据接口，再根据业务场景对数据接口进行组合，对外暴露业务接口，即便这样，服务端对前端暴露的接口数量还是非常多，因为业务总是多变的。")]),t._v(" "),a("li",[t._v("接口扩展成本高：出于带宽的考虑移动端我们要求接口返回尽量少的字段，PC 端通常要展现更多字段；考虑首屏性能，我们又要求对接口做合并；传统 API 应对这些需求，前后端都面临改造，成本较高。")]),t._v(" "),a("li",[t._v("接口响应的数据格式无法预知：由于接口文档几乎总是不能及时更新，前端工程师无法预知接口响应的数据格式，影响前端开发进度。")])]),t._v(" "),a("h2",{attrs:{id:"新的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新的问题"}},[t._v("#")]),t._v(" 新的问题")]),t._v(" "),a("ul",[a("li",[t._v("侵入性：GraphQL 受益最大的是前端，却需要服务端鼎力支持，特别是老系统迁移，服务端与前端都面临较大的改造。")]),t._v(" "),a("li",[t._v("学习成本：GraphQL 是一套全新的理念，需要前后端同学都学习新的知识才能掌握这门技术，这也带来较大的学习成本。")])]),t._v(" "),a("h2",{attrs:{id:"links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b9b650df265da0afe62cf4e",target:"_blank",rel:"noopener noreferrer"}},[t._v("GraphQL"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5947b45c128fe1006a505189",target:"_blank",rel:"noopener noreferrer"}},[t._v("REST 2.0 在此，它的名字叫 GraphQL"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=s.exports}}]);