(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{416:function(t,s,a){"use strict";a.r(s);var r=a(43),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器如何验证-https-证书的合法性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何验证-https-证书的合法性"}},[t._v("#")]),t._v(" 浏览器如何验证 HTTPS 证书的合法性")]),t._v(" "),a("h2",{attrs:{id:"大致过程："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大致过程："}},[t._v("#")]),t._v(" 大致过程：")]),t._v(" "),a("p",[t._v("浏览器从服务器拿到证书。\n证书上有服务器的公钥和 CA 机构打上的数字签名。\n拿到证书后验证其数字签名。\n具体就是，根据证书上写的 CA 签发机构，在浏览器内置的根证书里找到对应的公钥，用此公钥解开数字签名，得到摘要（digest,证书内容的 hash 值），据此验证证书的合法性。")]),t._v(" "),a("h2",{attrs:{id:"多说两句-https-接下来的加密过程："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多说两句-https-接下来的加密过程："}},[t._v("#")]),t._v(" 多说两句 https 接下来的加密过程：")]),t._v(" "),a("p",[t._v("验证完合法性后，在证书里取出服务器的公钥。\n浏览器生成对称密钥。\n使用服务器公钥对该对称密钥加密，发回给服务器。\n服务器使用私钥解密，得到对称密钥。\n服务器使用该对称密钥加密后续 http 数据。\n使用对称密钥加密是因为比非对称加密高效。")]),t._v(" "),a("h2",{attrs:{id:"links"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.zhihu.com/question/37370216",target:"_blank",rel:"noopener noreferrer"}},[t._v("zhihu"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);