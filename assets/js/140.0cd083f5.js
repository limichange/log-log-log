(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{485:function(e,t,r){"use strict";r.r(t);var o=r(43),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"proxy-与-object-defineproperty-优劣对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#proxy-与-object-defineproperty-优劣对比"}},[e._v("#")]),e._v(" Proxy 与 Object.defineProperty 优劣对比")]),e._v(" "),r("p",[e._v("Proxy 的优势如下:")]),e._v(" "),r("p",[e._v("Proxy 可以直接监听对象而非属性；\nProxy 可以直接监听数组的变化；\nProxy 有多达 13 种拦截方法,不限于 apply、ownKeys、deleteProperty、has 等等是 Object.defineProperty 不具备的；\nProxy 返回的是一个新对象,我们可以只操作新的对象达到目的,而 Object.defineProperty 只能遍历对象属性直接修改；\nProxy 作为新标准将受到浏览器厂商重点持续的性能优化，也就是传说中的新标准的性能红利；")]),e._v(" "),r("p",[e._v("Object.defineProperty 的优势如下:")]),e._v(" "),r("p",[e._v("兼容性好，支持 IE9，而 Proxy 的存在浏览器兼容性问题,而且无法用 polyfill 磨平，因此 Vue 的作者才声明需要等到下个大版本( 3.0 )才能用 Proxy 重写。")]),e._v(" "),r("h2",{attrs:{id:"links"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[e._v("#")]),e._v(" links")]),e._v(" "),r("p",[e._v("https://juejin.im/post/5d59f2a451882549be53b170#heading-23")])])}),[],!1,null,null,null);t.default=n.exports}}]);