(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{523:function(t,e,n){"use strict";n.r(e);var a=n(43),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"instanceof-和-typeof-的实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-和-typeof-的实现原理"}},[t._v("#")]),t._v(" instanceof 和 typeof 的实现原理")]),t._v(" "),n("h2",{attrs:{id:"typeof"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[t._v("#")]),t._v(" typeof")]),t._v(" "),n("p",[t._v("其实，js 在底层存储变量的时候，会在变量的机器码的低位 1-3 位存储其类型信息 👉")]),t._v(" "),n("p",[t._v("000：对象\n010：浮点数\n100：字符串\n110：布尔\n1：整数\nnull：所有机器码均为 0\nundefined：用 −2^30 整数来表示")]),t._v(" "),n("p",[t._v("所以，typeof 在判断 null 的时候就出现问题了，由于 null 的所有机器码均为 0，因此直接被当做了对象来看待。")]),t._v(" "),n("h2",{attrs:{id:"instanceof"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#instanceof"}},[t._v("#")]),t._v(" instanceof")]),t._v(" "),n("p",[t._v("其实 instanceof 主要的实现原理就是只要右边变量的 prototype 在左边变量的原型链上即可。因此，instanceof 在查找的过程中会遍历左边变量的原型链，直到找到右边变量的 prototype，如果查找失败，则会返回 false，告诉我们左边变量并非是右边变量的实例。")]),t._v(" "),n("h2",{attrs:{id:"links"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.im/post/5b0b9b9051882515773ae714",target:"_blank",rel:"noopener noreferrer"}},[t._v("instanceof 和 typeof 的实现原理"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);