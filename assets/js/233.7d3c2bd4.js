(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{577:function(s,t,e){"use strict";e.r(t);var a=e(43),o=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"commonjs、esm、amd-和-cmd-的循环依赖表现和原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commonjs、esm、amd-和-cmd-的循环依赖表现和原理"}},[s._v("#")]),s._v(" Commonjs、esm、Amd 和 Cmd 的循环依赖表现和原理")]),s._v(" "),e("h2",{attrs:{id:"commonjs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[s._v("#")]),s._v(" Commonjs")]),s._v(" "),e("p",[s._v("模块被循环依赖时，只会输出当前执行完成的导出值")]),s._v(" "),e("h2",{attrs:{id:"es-module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es-module"}},[s._v("#")]),s._v(" ES module")]),s._v(" "),e("p",[s._v("ES module 不是动态解析，且依赖模块优先执行")]),s._v(" "),e("p",[s._v("实际上 ES module 从加载入口模块到所有模块实例的执行主要经历了三步：构建、实例化和运行。")]),s._v(" "),e("p",[s._v("从入口模块开始，根据 import 关键字遍历依赖树，每遍历一个模块则生成该模块的 模块记录（module record），最后生成整个 模块图谱（module graph）。")]),s._v(" "),e("p",[s._v("ES module 在构建过程不会实例化和执行任何的 js 代码，也就是所谓的 静态解析 过程。")]),s._v(" "),e("p",[s._v("所有的模块记录都会被缓存在 模块映射（module map） 中，被依赖多次的模块也只会存在唯一一条映射记录，从而避免模块的重复下载和实例化。")]),s._v(" "),e("p",[s._v("JS 引擎不需要关心是否存在循环依赖，只需要在代码运行的时候，从内存空间中读取该导出值。")]),s._v(" "),e("h2",{attrs:{id:"links"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[s._v("#")]),s._v(" links")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/ba0faf79c167",target:"_blank",rel:"noopener noreferrer"}},[s._v("Commonjs、esm、Amd 和 Cmd 的循环依赖表现和原理"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=o.exports}}]);