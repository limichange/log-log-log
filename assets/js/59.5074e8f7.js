(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{405:function(t,a,s){"use strict";s.r(a);var e=s(43),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"dom-事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件"}},[t._v("#")]),t._v(" DOM 事件")]),t._v(" "),s("h2",{attrs:{id:"为什么是有事件流？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么是有事件流？"}},[t._v("#")]),t._v(" 为什么是有事件流？")]),t._v(" "),s("p",[t._v("假如在一个 button 上注册了一个 click 事件，又在其它父元素 div 上注册了一个 click 事件，那么当我们点击 button，是先触发父元素上的事件，还是 button 上的事件呢，这就需要一种约定去规范事件的执行顺序，就是事件执行的流程。")]),t._v(" "),s("h2",{attrs:{id:"dom-123"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-123"}},[t._v("#")]),t._v(" DOM 123")]),t._v(" "),s("p",[t._v("DOM 0 级的事件处理的步骤：先找到 DOM 节点，然后把处理函数赋值给该节点对象的事件属性。")]),t._v(" "),s("p",[t._v("DOM 2 级事件在 DOM0 级事件的基础上弥补了一个处理程序无法同时绑定多个处理函数的缺点，允许给一个处理程序添加多个处理函数。也就是说，使用 DOM2 事件可以随意添加多个处理函数，移除 DOM2 事件要用"),s("code",[t._v("removeEventListener")])]),t._v(" "),s("p",[t._v("DOM3 级事件在 DOM2 级事件的基础上添加了更多的事件类型")]),t._v(" "),s("h2",{attrs:{id:"事件冒泡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件冒泡"}},[t._v("#")]),t._v(" 事件冒泡")]),t._v(" "),s("p",[t._v("所谓事件冒泡就是事件像泡泡一样从最开始生成的地方一层一层往上冒")]),t._v(" "),s("h2",{attrs:{id:"事件捕获"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件捕获"}},[t._v("#")]),t._v(" 事件捕获")]),t._v(" "),s("p",[t._v("和事件冒泡相反，事件捕获是自上而下执行，我们只需要将 addEventListener 的第三个参数改为 true 就行")]),t._v(" "),s("p",[t._v("addEventListener 的第三个参数为指定事件是否在捕获阶段执行，设置为 true 表示事件在捕获阶段执行，而设置为 false 表示事件在冒泡阶段执行")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nevent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopPropagation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"事件代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件代理"}},[t._v("#")]),t._v(" 事件代理")]),t._v(" "),s("p",[t._v("由于事件会在冒泡阶段向上传播到父节点，因此可以把子节点的监听函数定义在父节点上，由父节点的监听函数统一处理多个子元素的事件。这种方法叫做事件的代理（delegation）。")]),t._v(" "),s("ul",[s("li",[t._v("减少内存消耗，提高性能")]),t._v(" "),s("li",[t._v("函数是对象，会占用内存，内存中的对象越多，浏览器性能越差")]),t._v(" "),s("li",[t._v("注册的事件一般都会指定 DOM 元素，事件越多，导致 DOM 元素访问次数越多，会延迟页面交互就绪时间。")]),t._v(" "),s("li",[t._v("删除子元素的时候不用考虑删除绑定事件")])]),t._v(" "),s("h2",{attrs:{id:"links"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/8c41a302bb17",target:"_blank",rel:"noopener noreferrer"}},[t._v("DOM 事件深入浅出"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5c71e80d51882562547bb0ce",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 DOM 事件机制"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);