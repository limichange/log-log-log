(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{388:function(n,a,e){"use strict";e.r(a);var t=e(43),s=Object(t.a)({},(function(){var n=this,a=n.$createElement,e=n._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"never-unknown-and-any"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#never-unknown-and-any"}},[n._v("#")]),n._v(" "),e("code",[n._v("never")]),n._v(", "),e("code",[n._v("unknown")]),n._v(" and "),e("code",[n._v("any")])]),n._v(" "),e("ul",[e("li",[n._v("Use never in positions where there will not or should not be a value.")]),n._v(" "),e("li",[n._v("Use unknown where there will be a value, but it might have any type.")]),n._v(" "),e("li",[n._v("Avoid using any unless you really need an unsafe escape hatch.")])]),n._v(" "),e("h2",{attrs:{id:"any"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#any"}},[n._v("#")]),n._v(" any")]),n._v(" "),e("p",[n._v("在了解 unknown 型別前先來回顧現有的 any 型別。any 型別可以是任何型別，任何變數只要宣告成 any 型別，就會失去 TypeScript 型別檢查機制，使開發時期倒退到傳統 JavaScript 的動態型別。")]),n._v(" "),e("h2",{attrs:{id:"unknown"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unknown"}},[n._v("#")]),n._v(" unknown")]),n._v(" "),e("p",[n._v("unknown 型別可以想像成只能 set-only 的 any 型別。依樣可以指派任何型別的值給 unknown，但要對 unknown 型別操作時，必須轉成 unknown 以外的型別，否則便會出錯。此外， unknown 只能指派給同樣是 unknown 型別或是 any 型別，不像 any 型別可以指派給 string、number 等任何型別。")]),n._v(" "),e("h2",{attrs:{id:"conclusion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[n._v("#")]),n._v(" conclusion")]),n._v(" "),e("p",[n._v("大部分情況下，unknown 型別幾乎可以取代現有的 any 型別，確保當下能斷定目前變數到底是什麼型別在對其進行操作，降低 any 型別帶來的不確定性。")]),n._v(" "),e("h2",{attrs:{id:"links"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[n._v("#")]),n._v(" links")]),n._v(" "),e("ul",[e("li",[n._v("https://blog.logrocket.com/when-to-use-never-and-unknown-in-typescript-5e4d6c5799ad/")])])])}),[],!1,null,null,null);a.default=s.exports}}]);