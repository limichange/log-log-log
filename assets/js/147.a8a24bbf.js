(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{491:function(t,a,s){"use strict";s.r(a);var e=s(43),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"set、weakset、map-及-weakmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set、weakset、map-及-weakmap"}},[t._v("#")]),t._v(" Set、WeakSet、Map 及 WeakMap")]),t._v(" "),s("p",[t._v("Set 和 Map 主要的应用场景在于 "),s("code",[t._v("数据重组")]),t._v(" 和 "),s("code",[t._v("数据储存")]),t._v("\nSet 是一种叫做"),s("code",[t._v("集合")]),t._v("的数据结构，Map 是一种叫做"),s("code",[t._v("字典")]),t._v("的数据结构")]),t._v(" "),s("h2",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" Set")]),t._v(" "),s("p",[t._v("ES6 新增的一种新的数据结构，类似于数组，但成员是唯一且无序的，没有重复的值。")]),t._v(" "),s("p",[t._v("Set 本身是一种构造函数，用来生成 Set 数据结构。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("iterable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 2 3 4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 去重数组的重复对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3]")]),t._v("\n")])])]),s("h2",{attrs:{id:"weakset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakset"}},[t._v("#")]),t._v(" WeakSet")]),t._v(" "),s("p",[t._v("WeakSet 对象允许你将弱引用对象储存在一个集合中")]),t._v(" "),s("h3",{attrs:{id:"weakset-与-set-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakset-与-set-的区别"}},[t._v("#")]),t._v(" WeakSet 与 Set 的区别")]),t._v(" "),s("ul",[s("li",[t._v("WeakSet 只能储存对象引用，不能存放值，而 Set 对象都可以")]),t._v(" "),s("li",[t._v("WeakSet 对象中储存的对象值都是被弱引用的，即垃圾回收机制不考虑 WeakSet 对该对象的应用，如果没有其他的变量或属性引用这个对象值，则这个对象将会被垃圾回收掉（不考虑该对象还存在于 WeakSet 中），所以，WeakSet 对象里有多少个成员元素，取决于垃圾回收机制有没有运行，运行前后成员个数可能不一致，遍历结束之后，有的成员可能取不到了（被垃圾回收了），WeakSet 对象是无法被遍历的（ES6 规定 WeakSet 不可遍历），也没有办法拿到它包含的所有元素")])]),t._v(" "),s("h2",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[t._v("#")]),t._v(" Map")]),t._v(" "),s("h3",{attrs:{id:"集合-与-字典-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集合-与-字典-的区别"}},[t._v("#")]),t._v(" 集合 与 字典 的区别")]),t._v(" "),s("p",[t._v("集合 是以 "),s("code",[t._v("[value, value]")]),t._v("的形式储存元素，字典 是以 "),s("code",[t._v("[key, value]")]),t._v(" 的形式储存")]),t._v(" "),s("h2",{attrs:{id:"weakmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weakmap"}},[t._v("#")]),t._v(" WeakMap")]),t._v(" "),s("p",[s("code",[t._v("WeakMap")]),t._v(" 对象是一组键值对的集合，其中的键是"),s("code",[t._v("弱引用对象")]),t._v("，而值可以是任意。\n注意，"),s("code",[t._v("WeakMap")]),t._v(" 弱引用的只是键名，而不是键值。键值依然是正常引用。\n"),s("code",[t._v("WeakMap")]),t._v(" 中，每个键对自己所引用对象的引用都是弱引用，在没有其他引用和该键引用同一对象，这个对象将会被垃圾回收（相应的 key 则变成无效的），所以"),s("code",[t._v("WeakMap")]),t._v(" 的 key 是不可枚举的。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Set")]),t._v(" "),s("ul",[s("li",[t._v("成员唯一，无序且不重复")]),t._v(" "),s("li",[t._v("[value, value]，键值与键名是一致的（或者说只有键值，没有键名）")]),t._v(" "),s("li",[t._v("可以遍历，方法有：add、delete、has")])])]),t._v(" "),s("li",[s("p",[t._v("WeakSet")]),t._v(" "),s("ul",[s("li",[t._v("成员都是对象")]),t._v(" "),s("li",[t._v("成员都是弱引用，可以被垃圾回收机制回收，可以用来保存 DOM 节点，不容易造成内存泄漏")]),t._v(" "),s("li",[t._v("不能遍历，方法有 add、delete、has")])])]),t._v(" "),s("li",[s("p",[t._v("Map")]),t._v(" "),s("ul",[s("li",[t._v("本质上是键值对的集合，类似集合")]),t._v(" "),s("li",[t._v("可以遍历，方法很多可以跟各种数据格式转换")])])]),t._v(" "),s("li",[s("p",[t._v("WeakMap")]),t._v(" "),s("ul",[s("li",[t._v("只接受对象作为键名（null 除外），不接受其他类型的值作为键名")]),t._v(" "),s("li",[t._v("键名是弱引用，键值可以是任意的，键名所指向的对象可以被垃圾回收，此时键名是无效的")]),t._v(" "),s("li",[t._v("不能遍历，方法有 get、set、has、delete")])])])]),t._v(" "),s("h2",{attrs:{id:"links"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/sisterAn/blog/issues/24",target:"_blank",rel:"noopener noreferrer"}},[t._v("Set、WeakSet、Map 及 WeakMap"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);