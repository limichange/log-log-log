(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{428:function(t,a,r){"use strict";r.r(a);var e=r(43),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"oop-的三大特征"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#oop-的三大特征"}},[t._v("#")]),t._v(" OOP 的三大特征")]),t._v(" "),r("h2",{attrs:{id:"封装（encapsulate）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#封装（encapsulate）"}},[t._v("#")]),t._v(" 封装（Encapsulate）")]),t._v(" "),r("p",[t._v("理解：定义对象和操作，只提供抽象的接口，并隐藏它们的具体实现。")]),t._v(" "),r("h2",{attrs:{id:"继承（inheritance）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#继承（inheritance）"}},[t._v("#")]),t._v(" 继承（Inheritance）")]),t._v(" "),r("p",[t._v("理解：通过现有数据类型的性质，创建新的数据类型，而不影响原有数据类型。")]),t._v(" "),r("h2",{attrs:{id:"多态（polymorphism）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多态（polymorphism）"}},[t._v("#")]),t._v(" 多态（Polymorphism）")]),t._v(" "),r("p",[t._v("理解：多个不同对象对同一消息作出响应。")]),t._v(" "),r("h2",{attrs:{id:"links"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[t._v("#")]),t._v(" links")]),t._v(" "),r("p",[t._v("-"),r("a",{attrs:{href:"http://www.yulongjun.com/python/20170512-02-oop-three-principles/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OOP 的三大特征：封装、继承、多态"),r("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=s.exports}}]);