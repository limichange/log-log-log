(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{430:function(a,s,t){"use strict";t.r(s);var r=t(43),e=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[a._v("#")]),a._v(" Redis")]),a._v(" "),t("h2",{attrs:{id:"redis-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-介绍"}},[a._v("#")]),a._v(" Redis 介绍")]),a._v(" "),t("h3",{attrs:{id:"nosql-基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nosql-基本概念"}},[a._v("#")]),a._v(" Nosql 基本概念")]),a._v(" "),t("p",[a._v("为了解决高并发、高可用、高可扩展，大数据存储等一系列问题而产生的数据库解决方案，就是 NoSql。")]),a._v(" "),t("p",[a._v("NoSql，叫非关系型数据库，它的全名 Not only sql。它不能替代关系型数据库，只能作为关系型数据库的一个良好补充。")]),a._v(" "),t("h3",{attrs:{id:"nosql-分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nosql-分类"}},[a._v("#")]),a._v(" Nosql 分类")]),a._v(" "),t("h4",{attrs:{id:"键值-key-value-存储数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#键值-key-value-存储数据库"}},[a._v("#")]),a._v(" 键值(Key-Value)存储数据库")]),a._v(" "),t("p",[a._v("相关产品： Tokyo Cabinet/Tyrant、Redis、Voldemort、Berkeley DB\n典型应用： 内容缓存，主要用于处理大量数据的高访问负载。\n数据模型： 一系列键值对\n优势： 快速查询\n劣势： 存储的数据缺少结构化")]),a._v(" "),t("h4",{attrs:{id:"列存储数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列存储数据库"}},[a._v("#")]),a._v(" 列存储数据库")]),a._v(" "),t("p",[a._v("相关产品：Cassandra, HBase, Riak\n典型应用：分布式的文件系统\n数据模型：以列簇式存储，将同一列数据存在一起\n优势：查找速度快，可扩展性强，更容易进行分布式扩展\n劣势：功能相对局限")]),a._v(" "),t("h4",{attrs:{id:"文档型数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文档型数据库"}},[a._v("#")]),a._v(" 文档型数据库")]),a._v(" "),t("p",[a._v("相关产品：CouchDB、MongoDB\n典型应用：Web 应用（与 Key-Value 类似，Value 是结构化的）\n数据模型： 一系列键值对\n优势：数据结构要求不严格\n劣势： 查询性能不高，而且缺乏统一的查询语法")]),a._v(" "),t("h4",{attrs:{id:"图形-graph-数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#图形-graph-数据库"}},[a._v("#")]),a._v(" 图形(Graph)数据库")]),a._v(" "),t("p",[a._v("相关数据库：Neo4J、InfoGrid、Infinite Graph\n典型应用：社交网络\n数据模型：图结构\n优势：利用图结构相关算法。\n劣势：需要对整个图做计算才能得出结果，不容易做分布式的集群方案。")]),a._v(" "),t("h2",{attrs:{id:"redis-基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-基本概念"}},[a._v("#")]),a._v(" Redis 基本概念")]),a._v(" "),t("p",[a._v("Redis 是使用 c 语言开发的一个高性能键值数据库。Redis 可以通过一些键值类型来存储数据。 键值类型： String 字符类型 map 散列类型 list 列表类型 set 集合类型 sortedset 有序集合类型")]),a._v(" "),t("h2",{attrs:{id:"应用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[a._v("#")]),a._v(" 应用场景")]),a._v(" "),t("p",[a._v("缓存（数据查询、短连接、新闻内容、商品内容等等）。（最多使用） 分布式集群架构中的 session 分离。 聊天室的在线好友列表。 任务队列。（秒杀、抢购、12306 等等） 应用排行榜。 网站访问统计。 数据过期处理（可以精确到毫秒）")]),a._v(" "),t("h2",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[a._v("#")]),a._v(" 数据类型")]),a._v(" "),t("ul",[t("li",[a._v("String 类型")]),a._v(" "),t("li",[a._v("Hash 散列类型")]),a._v(" "),t("li",[a._v("List 类型")])]),a._v(" "),t("h2",{attrs:{id:"redis-持久化方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-持久化方案"}},[a._v("#")]),a._v(" Redis 持久化方案")]),a._v(" "),t("h3",{attrs:{id:"rdb-方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rdb-方式"}},[a._v("#")]),a._v(" Rdb 方式")]),a._v(" "),t("p",[a._v("Redis 默认的方式，redis 通过快照方式将数据持久化到磁盘中。")]),a._v(" "),t("p",[a._v("一旦 redis 非法关闭，那么会丢失最后一次持久化之后的数据。")]),a._v(" "),t("p",[a._v("如果数据不重要，则不必要关心。 如果数据不能允许丢失，那么要使用 aof 方式。")]),a._v(" "),t("h3",{attrs:{id:"aof-方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aof-方式"}},[a._v("#")]),a._v(" Aof 方式")]),a._v(" "),t("p",[a._v("Redis 默认是不使用该方式持久化的。Aof 方式的持久化，是操作一次 redis 数据库，则将操作的记录存储到 aof 持久化文件中。")]),a._v(" "),t("h2",{attrs:{id:"links"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#links"}},[a._v("#")]),a._v(" links")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://juejin.im/post/5b4dd82ee51d451925629622",target:"_blank",rel:"noopener noreferrer"}},[a._v("Redis 入门"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);